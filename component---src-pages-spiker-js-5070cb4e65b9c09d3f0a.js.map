{"version":3,"sources":["webpack:///./src/pages/spiker.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Spiker","componentDidMount","$","window","scroll","scrollTop","addClass","removeClass","render","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","className","gatsby__WEBPACK_IMPORTED_MODULE_8__","to","href","classnName","Component","pageQuery","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","ProdPageRenderer","_ref","location","pageResources","InternalPageRenderer","Object","assign","json","SEO","description","lang","meta","title","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","data","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","color","textDecoration","Layout","children","_856328897","Fragment","paddingTop","rel"],"mappings":"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","file":"component---src-pages-spiker-js-5070cb4e65b9c09d3f0a.js","sourcesContent":["import React, { Component } from \"react\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Particles from 'react-particles-js'\r\nimport \"./custom.css\"\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {useSpring, animated} from 'react-spring'\r\nimport {Parallax, ParallaxLayer} from 'react-spring/renderprops-addons'\r\nimport '@fortawesome/fontawesome-free/css/all.css'\r\nimport $ from 'jquery/dist/jquery.js'\r\nimport { Link, graphql } from 'gatsby';\r\nimport Img from 'gatsby-image';\r\n\r\nclass Spiker extends Component {\r\n\r\n  componentDidMount () {\r\n    $(window).scroll(function () {\r\n      if ($(window).scrollTop() > 10) {\r\n        $('.nav').addClass('floating-nav');\r\n      } else {\r\n        $('.nav').removeClass('floating-nav');\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='spiker'>\r\n        <div className='nav'><Link to=\"/\">Back To Home</Link></div>\r\n \r\n          <div className='project-main'>\r\n            <div className='project-intro-details'>\r\n              <h3 className='heading-title center main-color'>\r\n                Spiker\r\n              </h3>\r\n\r\n              <div className='project-description-main main-color col-md-6 col-sm-12'>\r\n                <p className='sub-heading'>\r\n                  <a href=\"https://spikerapp.com/\">Spiker</a> is a subscription based web and mobile application that is meant to help \r\n                  users bookkeep, track their finances and help them save time and money.\r\n                </p>\r\n              </div>\r\n\r\n              <div className='tech-badge-list'>\r\n                <div className='tech-badge'>\r\n                  Sails Js\r\n                </div>\r\n                <div className='tech-badge'>\r\n                  AWS Lambda\r\n                </div>\r\n                <div className='tech-badge'>\r\n                  Amazon S3\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n            \r\n          </div>\r\n\r\n        <div className='project-description main-color-bg center p-50'>\r\n          <div className='max-width-1200'>\r\n\r\n            <h3 className='center heading-title white'><span className='yellow'>O</span>verview</h3>\r\n            <p className='max-width-80 p-10 align-left'><i>As this is an active and private software which I worked on during my coop, I am unable to talk about some details. However you can feel free to ask me for my refrences where I can\r\n            re-direct you to my supervisor on the project who can help give you an insight to my performance.</i>\r\n            <br/><br/>\r\n            During the final months of coop, I was tasked to work on Spiker.\r\n            Spiker was a live project but outdated and needed updating and some TLC.\r\n\r\n            My responsibilites included (but not limited to):\r\n            <br/>\r\n            <br/>\r\n            <ul>\r\n              <li>Performing a major version upgrade</li>\r\n              <li>Integrating AWS Lambda</li>\r\n              <li>Refactoring</li>\r\n              <li>Updating Unit Tests, implementing new ones</li>\r\n              <li>Fixing reported bugs</li>\r\n            </ul> \r\n            <br/>\r\n            Working on Sails Js was a new experience and upgrading the app's version to V1.0 from it's previous versions was a bit challenging; due to its many breaking changes. I was responsible for fixing the many breaking changes along with a colleague, finding and integrating new libraries to replace outdated ones, refactoring code and fixing unit tests to align with the new changes.\r\n            After the upgrade, I (along with a colleague) worked with AWS Lamda and Amazon s3 to build out certain functionalities of the software. That was a fun experience where I learned a lot about AWS services and S3 buckets. \r\n            <br/><br/>\r\n            You can check out the live website <a classnName='alt-link' href=\"https://spikerapp.com/\"><b>here</b></a>\r\n            <br/><br/>\r\n            </p>\r\n            </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Spiker\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    imageOne: file(relativePath: { eq: \"spiker.png\" }) {\r\n      childImageSharp {\r\n        fluid(maxWidth: 600) {\r\n          ...GatsbyImageSharpFluid\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport Helmet from \"react-helmet\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nfunction SEO({ description, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title}\r\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: `summary`,\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","import { Link } from \"gatsby\"\r\nimport PropTypes from \"prop-types\"\r\nimport React from \"react\"\r\n\r\nconst Header = ({ siteTitle }) => (\r\n  <header\r\n    style={{\r\n      background: `white`,\r\n      marginBottom: `1.45rem`,\r\n    }}\r\n  >\r\n    <div\r\n      style={{\r\n        margin: `0 auto`,\r\n        maxWidth: 960,\r\n        padding: `1.45rem 1.0875rem`,\r\n      }}\r\n    >\r\n      <h1 style={{ margin: 0 }}>\r\n        <Link\r\n          to=\"/\"\r\n          style={{\r\n            color: `white`,\r\n            textDecoration: `none`,\r\n          }}\r\n        >\r\n          {siteTitle}\r\n        </Link>\r\n      </h1>\r\n    </div>\r\n  </header>\r\n)\r\n\r\nHeader.propTypes = {\r\n  siteTitle: PropTypes.string,\r\n}\r\n\r\nHeader.defaultProps = {\r\n  siteTitle: ``,\r\n}\r\n\r\nexport default Header\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Particles from 'react-particles-js'\r\n\r\nimport Header from \"./header\"\r\nimport \"./layout.css\"\r\n\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n\r\n  return (\r\n    <>\r\n      {/* <Header siteTitle={data.site.siteMetadata.title} /> */}\r\n      <div\r\n        style={{\r\n          margin: `0 auto`,\r\n          // maxWidth: 960,\r\n          // padding: `0px 1.0875rem 1.45rem`,\r\n          paddingTop: 0,\r\n        }}\r\n      >\r\n        {/* <Particles\r\n          params={{\r\n            particles: {\r\n              number: {\r\n                value: 200,\r\n                density: {\r\n                  enable: true,\r\n                  value_area: 800\r\n                }\r\n              },\r\n              shape: {\r\n                type: 'polygon',\r\n                stroke: {\r\n                  width: 2,\r\n                  color: 'white',\r\n                },\r\n                polygon: {\r\n                  nb_sides: '8'\r\n                }\r\n            }\r\n            },\r\n          }}\r\n          style={{\r\n            width: '100%',\r\n            backgroundColor: `#5e0005` ,\r\n            // position: 'absolute',\r\n            zIndex: '-1',\r\n            marginBottom: '10px' \r\n          }}/> */}\r\n        <link href=\"https://fonts.googleapis.com/css?family=Lato|Oswald&display=swap\" rel=\"stylesheet\"/> \r\n        <main>{children}</main>\r\n        <footer>\r\n          {/* © {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a> */}\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n"],"sourceRoot":""}